import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import dotenv from "dotenv";
import fs from "fs";
import path from "path";

import { createRequire } from "module";

const require = createRequire(import.meta.url);
const manifest = require("./manifest.json");

dotenv.config();

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

let distDir = "dist";

if (!prod) {
	const obsidianPluginsDir = process.env.OBSIDIAN_PLUGINS_DIR;
	if (fs.existsSync(obsidianPluginsDir)) {
		const pluginDir = path.join(obsidianPluginsDir, manifest.id);
		if (!fs.existsSync(path.join(obsidianPluginsDir, manifest.id))) {
			fs.mkdirSync(pluginDir);
		}
		distDir = pluginDir;

		// https://github.com/pjeby/hot-reload
		fs.closeSync(fs.openSync(path.join(distDir, ".hotreload", ""), "w"));

		fs.copyFileSync("manifest.json", path.join(distDir, "manifest.json"));
	}
}

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: `${distDir}/main.js`,
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
